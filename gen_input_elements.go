// This file was generated by the 'generate' Rake task

package htmlwriter

func (w *HtmlWriter) ButtonInput(attrs Attrs) {
	attrs["type"] = "button"
	w.Input(attrs)
}

func (w *HtmlWriter) ButtonInput_() {
	w.Input(Attrs{"type": "button"})
}

func (w *HtmlWriter) CheckboxInput(attrs Attrs) {
	attrs["type"] = "checkbox"
	w.Input(attrs)
}

func (w *HtmlWriter) CheckboxInput_() {
	w.Input(Attrs{"type": "checkbox"})
}

func (w *HtmlWriter) ColorInput(attrs Attrs) {
	attrs["type"] = "color"
	w.Input(attrs)
}

func (w *HtmlWriter) ColorInput_() {
	w.Input(Attrs{"type": "color"})
}

func (w *HtmlWriter) DateInput(attrs Attrs) {
	attrs["type"] = "date"
	w.Input(attrs)
}

func (w *HtmlWriter) DateInput_() {
	w.Input(Attrs{"type": "date"})
}

func (w *HtmlWriter) DatetimeInput(attrs Attrs) {
	attrs["type"] = "datetime"
	w.Input(attrs)
}

func (w *HtmlWriter) DatetimeInput_() {
	w.Input(Attrs{"type": "datetime"})
}

func (w *HtmlWriter) DatetimeLocalInput(attrs Attrs) {
	attrs["type"] = "datetime-local"
	w.Input(attrs)
}

func (w *HtmlWriter) DatetimeLocalInput_() {
	w.Input(Attrs{"type": "datetime-local"})
}

func (w *HtmlWriter) EmailInput(attrs Attrs) {
	attrs["type"] = "email"
	w.Input(attrs)
}

func (w *HtmlWriter) EmailInput_() {
	w.Input(Attrs{"type": "email"})
}

func (w *HtmlWriter) FileInput(attrs Attrs) {
	attrs["type"] = "file"
	w.Input(attrs)
}

func (w *HtmlWriter) FileInput_() {
	w.Input(Attrs{"type": "file"})
}

func (w *HtmlWriter) HiddenInput(attrs Attrs) {
	attrs["type"] = "hidden"
	w.Input(attrs)
}

func (w *HtmlWriter) HiddenInput_() {
	w.Input(Attrs{"type": "hidden"})
}

func (w *HtmlWriter) ImageInput(attrs Attrs) {
	attrs["type"] = "image"
	w.Input(attrs)
}

func (w *HtmlWriter) ImageInput_() {
	w.Input(Attrs{"type": "image"})
}

func (w *HtmlWriter) MonthInput(attrs Attrs) {
	attrs["type"] = "month"
	w.Input(attrs)
}

func (w *HtmlWriter) MonthInput_() {
	w.Input(Attrs{"type": "month"})
}

func (w *HtmlWriter) NumberInput(attrs Attrs) {
	attrs["type"] = "number"
	w.Input(attrs)
}

func (w *HtmlWriter) NumberInput_() {
	w.Input(Attrs{"type": "number"})
}

func (w *HtmlWriter) PasswordInput(attrs Attrs) {
	attrs["type"] = "password"
	w.Input(attrs)
}

func (w *HtmlWriter) PasswordInput_() {
	w.Input(Attrs{"type": "password"})
}

func (w *HtmlWriter) RadioInput(attrs Attrs) {
	attrs["type"] = "radio"
	w.Input(attrs)
}

func (w *HtmlWriter) RadioInput_() {
	w.Input(Attrs{"type": "radio"})
}

func (w *HtmlWriter) RangeInput(attrs Attrs) {
	attrs["type"] = "range"
	w.Input(attrs)
}

func (w *HtmlWriter) RangeInput_() {
	w.Input(Attrs{"type": "range"})
}

func (w *HtmlWriter) ResetInput(attrs Attrs) {
	attrs["type"] = "reset"
	w.Input(attrs)
}

func (w *HtmlWriter) ResetInput_() {
	w.Input(Attrs{"type": "reset"})
}

func (w *HtmlWriter) SearchInput(attrs Attrs) {
	attrs["type"] = "search"
	w.Input(attrs)
}

func (w *HtmlWriter) SearchInput_() {
	w.Input(Attrs{"type": "search"})
}

func (w *HtmlWriter) SubmitInput(attrs Attrs) {
	attrs["type"] = "submit"
	w.Input(attrs)
}

func (w *HtmlWriter) SubmitInput_() {
	w.Input(Attrs{"type": "submit"})
}

func (w *HtmlWriter) TelInput(attrs Attrs) {
	attrs["type"] = "tel"
	w.Input(attrs)
}

func (w *HtmlWriter) TelInput_() {
	w.Input(Attrs{"type": "tel"})
}

func (w *HtmlWriter) TextInput(attrs Attrs) {
	attrs["type"] = "text"
	w.Input(attrs)
}

func (w *HtmlWriter) TextInput_() {
	w.Input(Attrs{"type": "text"})
}

func (w *HtmlWriter) TimeInput(attrs Attrs) {
	attrs["type"] = "time"
	w.Input(attrs)
}

func (w *HtmlWriter) TimeInput_() {
	w.Input(Attrs{"type": "time"})
}

func (w *HtmlWriter) UrlInput(attrs Attrs) {
	attrs["type"] = "url"
	w.Input(attrs)
}

func (w *HtmlWriter) UrlInput_() {
	w.Input(Attrs{"type": "url"})
}

func (w *HtmlWriter) WeekInput(attrs Attrs) {
	attrs["type"] = "week"
	w.Input(attrs)
}

func (w *HtmlWriter) WeekInput_() {
	w.Input(Attrs{"type": "week"})
}

